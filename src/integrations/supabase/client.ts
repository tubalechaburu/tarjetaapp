
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://rrlyfiqgreoxedzfjqwy.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJybHlmaXFncmVveGVkemZqcXd5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDczNDUwMTEsImV4cCI6MjA2MjkyMTAxMX0.rtZC36QMaKpHQL7wuu3WPx2WCZZ6nylboUyUS9T7qSQ";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Function to get user role using the new safe function
export const getUserRole = async (userId: string): Promise<'user' | 'admin' | 'superadmin' | null> => {
  try {
    console.log("Getting user role for:", userId);
    
    // Use the new safe function instead of querying profiles directly
    const { data, error } = await supabase
      .rpc('get_user_role_safe', { user_uuid: userId });
    
    if (error) {
      console.error('Error fetching user role:', error);
      return 'user'; // Default to user role instead of null
    }
    
    console.log("User role data:", data);
    return data || 'user';
  } catch (error) {
    console.error('Error in getUserRole:', error);
    return 'user'; // Default to user role instead of null
  }
};

// Function to check Supabase connection
export const checkSupabaseConnection = async (): Promise<boolean> => {
  try {
    const { data, error } = await supabase.from('profiles').select('id').limit(1);
    return !error;
  } catch (error) {
    console.error('Supabase connection error:', error);
    return false;
  }
};
