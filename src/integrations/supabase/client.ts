
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://rrlyfiqgreoxedzfjqwy.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJybHlmaXFncmVveGVkemZqcXd5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDczNDUwMTEsImV4cCI6MjA2MjkyMTAxMX0.rtZC36QMaKpHQL7wuu3WPx2WCZZ6nylboUyUS9T7qSQ";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Function to get user role using the safe function
export const getUserRole = async (userId: string): Promise<'user' | 'superadmin' | null> => {
  try {
    console.log("Getting user role for:", userId);
    
    // Use the safe function we created in the database
    const { data, error } = await supabase.rpc('get_user_role_safe', {
      user_uuid: userId
    });
    
    if (error) {
      console.error('Error fetching user role:', error);
      return 'user'; // Default to user role
    }
    
    console.log("User role data:", data);
    
    // Ensure the returned value matches our expected types
    if (data === 'superadmin' || data === 'user') {
      return data;
    }
    
    return 'user'; // Default fallback
  } catch (error) {
    console.error('Error in getUserRole:', error);
    return 'user'; // Default to user role
  }
};

// Function to check Supabase connection
export const checkSupabaseConnection = async (): Promise<boolean> => {
  try {
    // Test with a simple query that doesn't cause recursion
    const { data, error } = await supabase
      .from('profiles')
      .select('id')
      .limit(1);
    
    console.log('Supabase connection test result:', { data, error });
    console.log('✅ Supabase connection successful');
    return true;
  } catch (error) {
    console.error('Supabase connection error:', error);
    console.log('❌ Supabase connection failed');
    return false;
  }
};

// Function to get system statistics
export const getSystemStats = async () => {
  try {
    console.log("Getting system stats...");
    const { data, error } = await supabase.rpc('get_system_stats');
    
    if (error) {
      console.error('Error fetching system stats:', error);
      return null;
    }
    
    console.log("System stats:", data);
    return data?.[0] || null;
  } catch (error) {
    console.error('Error in getSystemStats:', error);
    return null;
  }
};
